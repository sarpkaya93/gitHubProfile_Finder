var cssData = require('mdn-data').css;
var includes = require('lodash/includes');
var keys = require('lodash/keys');
var globalHelpers = require('../helpers/global');

var getStaticPropertyName = globalHelpers.getStaticPropertyName;

var cssProperties = keys(cssData.properties);
var cssSelectors = keys(cssData.selectors);

function startsWith(obj, property) {
  if (obj instanceof Array) {
    return (
      obj.filter(item =>
        property
          .replace('&', '')
          .trim()
          .startsWith(item)
      ).length > 0
    );
  }

  return false;
}

function isCamelCase(property) {
  if (property.indexOf('-') === -1 && property === property.toLowerCase()) {
    return true;
  }

  return property !== replaceCamelCaseWithDash(property);
}

function isCombinatorSelector(property) {
  return property.trim().startsWith('&');
}

function isCSSProperty(property) {
  if (!property) {
    return false;
  }
  var dashedproperty = replaceCamelCaseWithDash(property);

  return includes(cssProperties, dashedproperty);
}

function isMediaQuery(property) {
  return property.startsWith('@media');
}

function isPseudoSelector(property) {
  return startsWith(cssSelectors, property);
}

function replaceCamelCaseWithDash(string) {
  return string.replace(/([a-z])([A-Z])/g, '$1-$2').toLowerCase();
}

module.exports = {
  isCamelCase,
  isCombinatorSelector,
  isCSSProperty,
  isMediaQuery,
  isPseudoSelector,
  replaceCamelCaseWithDash
};
